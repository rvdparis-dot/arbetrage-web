{"ast":null,"code":"const API_KEY = \"3ce28f9c3654f2ccb2804e0a10c63879\";\nconst BASE_URL = \"https://api.the-odds-api.com/v4\";\nexport async function fetchAvailableSports() {\n  try {\n    const res = await fetch(`${BASE_URL}/sports/?apiKey=${API_KEY}`);\n    if (!res.ok) throw new Error(\"API error: \" + res.status);\n    const sports = await res.json();\n    return sports.map(sport => ({\n      sport: sport.title,\n      key: sport.key,\n      isActive: sport.active,\n      title: sport.title,\n      description: sport.description,\n      group: sport.group,\n      hasOutrights: sport.has_outrights\n    }));\n  } catch (err) {\n    // Fallback to empty\n    return [];\n  }\n}\nexport async function fetchOdds(sportKey, market = \"h2h\") {\n  try {\n    const url = `${BASE_URL}/sports/${sportKey}/odds/?apiKey=${API_KEY}&regions=us&markets=${market}&oddsFormat=american`;\n    const res = await fetch(url);\n    if (!res.ok) throw new Error(\"API error: \" + res.status);\n    return await res.json();\n  } catch (err) {\n    return [];\n  }\n}","map":{"version":3,"names":["API_KEY","BASE_URL","fetchAvailableSports","res","fetch","ok","Error","status","sports","json","map","sport","title","key","isActive","active","description","group","hasOutrights","has_outrights","err","fetchOdds","sportKey","market","url"],"sources":["/Users/thelaw/arbetrage-web/src/utils/OddsAPIService.ts"],"sourcesContent":["import { SportsAPIResponse, SportStatus, OddsAPIResponse } from \"../models/types\";\n\nconst API_KEY = \"3ce28f9c3654f2ccb2804e0a10c63879\";\nconst BASE_URL = \"https://api.the-odds-api.com/v4\";\n\nexport async function fetchAvailableSports(): Promise<SportStatus[]> {\n  try {\n    const res = await fetch(`${BASE_URL}/sports/?apiKey=${API_KEY}`);\n    if (!res.ok) throw new Error(\"API error: \" + res.status);\n    const sports: SportsAPIResponse[] = await res.json();\n    return sports.map((sport) => ({\n      sport: sport.title,\n      key: sport.key,\n      isActive: sport.active,\n      title: sport.title,\n      description: sport.description,\n      group: sport.group,\n      hasOutrights: sport.has_outrights,\n    }));\n  } catch (err) {\n    // Fallback to empty\n    return [];\n  }\n}\n\nexport async function fetchOdds(sportKey: string, market: string = \"h2h\"): Promise<OddsAPIResponse[]> {\n  try {\n    const url = `${BASE_URL}/sports/${sportKey}/odds/?apiKey=${API_KEY}&regions=us&markets=${market}&oddsFormat=american`;\n    const res = await fetch(url);\n    if (!res.ok) throw new Error(\"API error: \" + res.status);\n    return await res.json();\n  } catch (err) {\n    return [];\n  }\n}"],"mappings":"AAEA,MAAMA,OAAO,GAAG,kCAAkC;AAClD,MAAMC,QAAQ,GAAG,iCAAiC;AAElD,OAAO,eAAeC,oBAAoBA,CAAA,EAA2B;EACnE,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,mBAAmBD,OAAO,EAAE,CAAC;IAChE,IAAI,CAACG,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,aAAa,GAAGH,GAAG,CAACI,MAAM,CAAC;IACxD,MAAMC,MAA2B,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;IACpD,OAAOD,MAAM,CAACE,GAAG,CAAEC,KAAK,KAAM;MAC5BA,KAAK,EAAEA,KAAK,CAACC,KAAK;MAClBC,GAAG,EAAEF,KAAK,CAACE,GAAG;MACdC,QAAQ,EAAEH,KAAK,CAACI,MAAM;MACtBH,KAAK,EAAED,KAAK,CAACC,KAAK;MAClBI,WAAW,EAAEL,KAAK,CAACK,WAAW;MAC9BC,KAAK,EAAEN,KAAK,CAACM,KAAK;MAClBC,YAAY,EAAEP,KAAK,CAACQ;IACtB,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ;IACA,OAAO,EAAE;EACX;AACF;AAEA,OAAO,eAAeC,SAASA,CAACC,QAAgB,EAAEC,MAAc,GAAG,KAAK,EAA8B;EACpG,IAAI;IACF,MAAMC,GAAG,GAAG,GAAGvB,QAAQ,WAAWqB,QAAQ,iBAAiBtB,OAAO,uBAAuBuB,MAAM,sBAAsB;IACrH,MAAMpB,GAAG,GAAG,MAAMC,KAAK,CAACoB,GAAG,CAAC;IAC5B,IAAI,CAACrB,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,aAAa,GAAGH,GAAG,CAACI,MAAM,CAAC;IACxD,OAAO,MAAMJ,GAAG,CAACM,IAAI,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOW,GAAG,EAAE;IACZ,OAAO,EAAE;EACX;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}