{"ast":null,"code":"export class OddsConverter{static americanToDecimal(americanOdds){const cleanedOdds=americanOdds.trim().replace(\"+\",\"\");const numOdds=parseInt(cleanedOdds,10);if(isNaN(numOdds)||numOdds===0)return undefined;if(numOdds>0){return numOdds/100+1;}else{return 100/Math.abs(numOdds)+1;}}static decimalToAmerican(decimalOdds){if(decimalOdds>=2.0){const american=(decimalOdds-1.0)*100;return\"+\".concat(Math.round(american));}else{const american=-100/(decimalOdds-1.0);return\"\".concat(Math.round(american));}}static impliedProbability(decimalOdds){return 1/decimalOdds;}}","map":{"version":3,"names":["OddsConverter","americanToDecimal","americanOdds","cleanedOdds","trim","replace","numOdds","parseInt","isNaN","undefined","Math","abs","decimalToAmerican","decimalOdds","american","concat","round","impliedProbability"],"sources":["/Users/thelaw/Documents/GitHub/arbetrage-web/src/utils/OddsConverter.ts"],"sourcesContent":["export class OddsConverter {\n  static americanToDecimal(americanOdds: string): number | undefined {\n    const cleanedOdds = americanOdds.trim().replace(\"+\", \"\");\n    const numOdds = parseInt(cleanedOdds, 10);\n    if (isNaN(numOdds) || numOdds === 0) return undefined;\n    if (numOdds > 0) {\n      return numOdds / 100 + 1;\n    } else {\n      return 100 / Math.abs(numOdds) + 1;\n    }\n  }\n\n  static decimalToAmerican(decimalOdds: number): string {\n    if (decimalOdds >= 2.0) {\n      const american = (decimalOdds - 1.0) * 100;\n      return `+${Math.round(american)}`;\n    } else {\n      const american = -100 / (decimalOdds - 1.0);\n      return `${Math.round(american)}`;\n    }\n  }\n\n  static impliedProbability(decimalOdds: number): number {\n    return 1 / decimalOdds;\n  }\n}"],"mappings":"AAAA,MAAO,MAAM,CAAAA,aAAc,CACzB,MAAO,CAAAC,iBAAiBA,CAACC,YAAoB,CAAsB,CACjE,KAAM,CAAAC,WAAW,CAAGD,YAAY,CAACE,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,CAAE,EAAE,CAAC,CACxD,KAAM,CAAAC,OAAO,CAAGC,QAAQ,CAACJ,WAAW,CAAE,EAAE,CAAC,CACzC,GAAIK,KAAK,CAACF,OAAO,CAAC,EAAIA,OAAO,GAAK,CAAC,CAAE,MAAO,CAAAG,SAAS,CACrD,GAAIH,OAAO,CAAG,CAAC,CAAE,CACf,MAAO,CAAAA,OAAO,CAAG,GAAG,CAAG,CAAC,CAC1B,CAAC,IAAM,CACL,MAAO,IAAG,CAAGI,IAAI,CAACC,GAAG,CAACL,OAAO,CAAC,CAAG,CAAC,CACpC,CACF,CAEA,MAAO,CAAAM,iBAAiBA,CAACC,WAAmB,CAAU,CACpD,GAAIA,WAAW,EAAI,GAAG,CAAE,CACtB,KAAM,CAAAC,QAAQ,CAAG,CAACD,WAAW,CAAG,GAAG,EAAI,GAAG,CAC1C,UAAAE,MAAA,CAAWL,IAAI,CAACM,KAAK,CAACF,QAAQ,CAAC,EACjC,CAAC,IAAM,CACL,KAAM,CAAAA,QAAQ,CAAG,CAAC,GAAG,EAAID,WAAW,CAAG,GAAG,CAAC,CAC3C,SAAAE,MAAA,CAAUL,IAAI,CAACM,KAAK,CAACF,QAAQ,CAAC,EAChC,CACF,CAEA,MAAO,CAAAG,kBAAkBA,CAACJ,WAAmB,CAAU,CACrD,MAAO,EAAC,CAAGA,WAAW,CACxB,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}